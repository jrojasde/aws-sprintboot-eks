name: Deploy Spring Boot to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Configuración de Java y Maven para construir la aplicación
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1 # Especifica la región aquí

    # Log in en Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Construcción y publicación de la imagen Docker
    - name: Build and Push Docker image
      run: |
        IMAGE_TAG=${{ github.sha }}
        REPOSITORY_URI=654654589924.dkr.ecr.us-west-1.amazonaws.com/springboot-eks
        docker build -t $REPOSITORY_URI:$IMAGE_TAG .
        docker push $REPOSITORY_URI:$IMAGE_TAG

    - name: Set dynamic image tag
      id: ecr
      run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV


    # Configurar kubectl para EKS
    - name: Configure kubectl for EKS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region us-west-1 --name eks-cluster-utec-demo

    # Despliegue en EKS
    - name: Deploy to EKS
      env:
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        sed -i "s|<IMAGE_TAG>|$IMAGE_TAG|g" k8s.yaml
        kubectl apply -f k8s.yaml
        kubectl rollout restart deployment/myapp